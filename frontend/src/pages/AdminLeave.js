import React, { useEffect, useState } from 'react';
import axios from 'axios';
import Swal from 'sweetalert2';
import { useNavigate } from 'react-router-dom';
import '../styles/Leave.css';

const AdminLeave = () => {
  const [leaves, setLeaves] = useState([]);
  const navigate = useNavigate();
  const token = localStorage.getItem('token');

  useEffect(() => {
    const fetchLeaves = async () => {
      try {
        const res = await axios.get('http://localhost:9999/api/leaves', {
          headers: { Authorization: `Bearer ${token}` },
        });
        console.log('t·∫•t c·∫£ ƒë∆°n xin ngh·ªâ', res.data);

        setLeaves(res.data);
      } catch (error) {
        console.error('L·ªói khi l·∫•y ƒë∆°n ngh·ªâ ph√©p:', error);
      }
    };
    fetchLeaves();
  }, [token]);

  // üìå C·∫≠p nh·∫≠t tr·∫°ng th√°i ƒë∆°n ngh·ªâ ph√©p (Duy·ªát / T·ª´ ch·ªëi)
  const handleUpdateStatus = async (id, status) => {
    const result = await Swal.fire({
      title: 'X√°c nh·∫≠n c·∫≠p nh·∫≠t',
      text: `B·∫°n ch·∫Øc ch·∫Øn mu·ªën chuy·ªÉn tr·∫°ng th√°i ƒë∆°n n√†y th√†nh  "${status.toLowerCase()}" ?`,
      icon: 'warning',
      showCancelButton: true,
      confirmButtonColor: '#3085d6',
      cancelButtonColor: '#d33',
      confirmButtonText: 'C√≥, c·∫≠p nh·∫≠t!',
      cancelButtonText: 'H·ªßy',
    });

    if (result.isConfirmed) {
      try {
        await axios.put(
          `http://localhost:9999/api/leaves/${id}/update`,
          { status },
          {
            headers: { Authorization: `Bearer ${token}` },
          },
        );

        Swal.fire('Th√†nh c√¥ng!', `ƒê∆°n ngh·ªâ ph√©p ƒë√£ ƒë∆∞·ª£c ${status.toLowerCase()}!`, 'success').then(() => {
          window.location.reload();
        });
      } catch (error) {
        Swal.fire('L·ªói!', 'Kh√¥ng th·ªÉ c·∫≠p nh·∫≠t ƒë∆°n ngh·ªâ ph√©p!', 'error');
      }
    }
  };

  // üìå X√≥a ƒë∆°n ngh·ªâ ph√©p
  const handleDelete = async (id) => {
    const result = await Swal.fire({
      title: 'B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a?',
      text: 'H√†nh ƒë·ªông n√†y kh√¥ng th·ªÉ ho√†n t√°c!',
      icon: 'warning',
      showCancelButton: true,
      confirmButtonColor: '#d33',
      cancelButtonColor: '#3085d6',
      confirmButtonText: 'X√≥a ngay!',
      cancelButtonText: 'H·ªßy',
    });

    if (result.isConfirmed) {
      try {
        await axios.delete(`http://localhost:9999/api/leaves/${id}/delete`, {
          headers: { Authorization: `Bearer ${token}` },
        });

        Swal.fire('ƒê√£ x√≥a!', 'ƒê∆°n ngh·ªâ ph√©p ƒë√£ b·ªã x√≥a.', 'success').then(() => {
          window.location.reload();
        });
      } catch (error) {
        Swal.fire('L·ªói!', 'Kh√¥ng th·ªÉ x√≥a ƒë∆°n ngh·ªâ ph√©p!', 'error');
      }
    }
  };

  return (
    <div className="leave-page">
      {/* üî• N√∫t Back Home */}
      <div className="back-home-container">
        <span className="back-home" onClick={() => navigate('/dashboard')}>
          ‚¨ÖÔ∏è Back Home
        </span>
      </div>

      <h1>Qu·∫£n L√Ω Ngh·ªâ Ph√©p</h1>
      <table className="leave-table">
        <thead>
          <tr>
            <th>Nh√¢n vi√™n</th>
            <th>Ch·ª©c v·ª•</th>
            <th>Ph√≤ng ban</th>
            <th>Ng√†y b·∫Øt ƒë·∫ßu</th>
            <th>Ng√†y k·∫øt th√∫c</th>
            <th>L√Ω do</th>
            <th>Tr·∫°ng th√°i</th>
            <th>H√†nh ƒë·ªông</th>
          </tr>
        </thead>
        <tbody>
          {leaves.map((leave) => (
            <tr key={leave._id}>
              <td>
                {leave.employeeId?.firstName} {leave.employeeId?.lastName}
              </td>
              <td>{leave.employeeId?.position}</td>
              <td>{leave.employeeId?.department?.name}</td>
              <td>{new Date(leave.startDate).toLocaleDateString('vi-VN')}</td>
              <td>{new Date(leave.endDate).toLocaleDateString('vi-VN')}</td>
              <td>{leave.reason}</td>
              <td className={`leave-status ${leave.status.toLowerCase().replace(' ', '-')}`}>{leave.status}</td>
              <td>
                {leave.status === 'Ch·ªù duy·ªát' && (
                  <>
                    <button className="approve-btn" onClick={() => handleUpdateStatus(leave._id, 'ƒê√£ duy·ªát')}>
                      ‚úî Duy·ªát
                    </button>
                    <button className="reject-btn" onClick={() => handleUpdateStatus(leave._id, 'ƒê√£ t·ª´ ch·ªëi')}>
                      ‚úñ T·ª´ ch·ªëi
                    </button>
                  </>
                )}
                <button className="delete-btn" onClick={() => handleDelete(leave._id)}>
                  üóë X√≥a
                </button>
              </td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  );
};

export default AdminLeave;
