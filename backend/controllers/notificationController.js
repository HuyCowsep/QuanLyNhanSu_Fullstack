const { Notification } = require("../models");

// üìå G·ª≠i th√¥ng b√°o m·ªõi
const createNotification = async (req, res) => {
  try {
    const { title, message, targetType, departmentId } = req.body;

    if (!title || !message) {
      return res.status(400).json({ message: "Ti√™u ƒë·ªÅ v√† n·ªôi dung th√¥ng b√°o l√† b·∫Øt bu·ªôc" });
    }

    if (targetType === "Department" && !departmentId) {
      return res.status(400).json({ message: "Ph√≤ng ban kh√¥ng h·ª£p l·ªá" });
    }

    const newNotification = new Notification({ title, message, targetType, departmentId });
    await newNotification.save();

    res.status(201).json({ message: "G·ª≠i th√¥ng b√°o th√†nh c√¥ng" });
  } catch (error) {
    res.status(500).json({ message: "L·ªói server", error: error.message });
  }
};

// üìå L·∫•y t·∫•t c·∫£ th√¥ng b√°o
const getAllNotifications = async (req, res) => {
  try {
    const notifications = await Notification.find().populate("departmentId", "name").sort({ createdAt: -1 });
    res.json(notifications);
  } catch (error) {
    res.status(500).json({ message: "L·ªói server", error: error.message });
  }
};

// üìå L·∫•y th√¥ng b√°o theo ph√≤ng ban ho·∫∑c t·∫•t c·∫£
const getNotificationsByDepartment = async (req, res) => {
  try {
    const { departmentId } = req.params;

    // T√¨m t·∫•t c·∫£ th√¥ng b√°o chung + th√¥ng b√°o c·ªßa ph√≤ng ban c·ª• th·ªÉ
    const notifications = await Notification.find({
      $or: [{ targetType: "All" }, { departmentId }],
    }).sort({ createdAt: -1 });

    res.json(notifications);
  } catch (error) {
    res.status(500).json({ message: "L·ªói server", error: error.message });
  }
};

module.exports = { createNotification, getAllNotifications, getNotificationsByDepartment };
